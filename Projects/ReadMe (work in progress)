Information on Cross Compiler Setup and Options
###############################################

A. How to Compile Examples in Project folder
============================================

1. Open a Terminal session in the Project folder
2. Type "cd xxxx" where xxxx = name of the project you wamnt to Compile
3. Type "make -f make-gcc650-stable" to Compile with GCC 6.50
4. If you want to use another Compiler version (like GCC 3.4.6 or VBCC), copy desired Makefile from _makefiles folder

A1. GCC Options for Libraries
-----------------------------

GCC 2.95.3 / 3.4.6 and 6.5.0 can be compiled using different run-time and/or static standrad C-libraries:

1. CLIB = ixemul
Compiler will use dynamic ixemul libraries (LIBS:ixemul.library and LIBS:ixnet.library), which are then required in AmigaOS

2. CLIB = -noixemul or -mcrt=nix20 
Compiler will use Static Libnix libraries from libnix/lib and Include files from libnix/include

Libnix link order:
* ncrt0*.0      : Startup codes (open shared libraries, stdin/out, etc)
* libnixmain.a  : Commandline parser (calculates argc and argv)
  libm.a        : Math library (external original)
* libstack.a    : Stack extension code (optional).
* libnix.a      : Main library
* libamiga.a    : Amiga library (original preferred / internal libnix version = subset)
* detach.o      : Auto detaching
* libstubs.a    : Library bases

3. CLIB = -mcrt=clib2
Compiler will use Static CLIB2 libraries from clib2/lib and Include files from clib2/include

A2. GCC Other Options 
---------------------

1. C_OPTIONS = -fomit-frame-pointer
Compiler will the storing of stack frame pointers during function calls.
The -fomit-frame-pointer option instructs the compiler to not store stack frame pointers if the function does not need it.
You can use this option to reduce the code image size.

2. C_OPTIONS = -Wall
Compiler will be enabled to output all the warnings about constructions that some users consider questionable, and that are easy to avoid (or modify to prevent the warning), even in conjunction with macros.

3. C_OPTIONS = -Ox
Compiler will optimise output code based on the given Optimisation flag:

-O0 = Reduce compilation time and make debugging produce the expected results. This is the default. 
-O1 = Basic optimisation (Speed/Size)
-O2 = Medium optimisation (Speed/Size)
-O3 = Strong optimisation (Speed/Size)
-Os = O2, but with balance towards Size optimisation
-Ofast = O3 without restrictions on compliancy
-Og = Optimise for Debugging
-Oz = Optimise for Size (agressive)

4. C_OPTIONS = -m680x0
Compiler will be optimised for a specific CPU architecture based on the given CPU flag:

GCC-2.95|3.4.6 = m68000|m68020|m68040|m68060
GCC-6.50 = m68000|m68020|m68040|m68060|m68080

A3. Additional Information 
--------------------------

Link Options:

-nostdlib = Do not use the standard system startup files or libraries when linking.
-nolibc = Do not use the C library or system libraries tightly coupled with it when linking
-nodefaultlibs = Do not use the standard system libraries when linking
-nostartfiles = Do not use the standard system startup files when linking

-l = force specific library to link

-fbaserel = 16-bit offsets from A4, where A4 points 32768 bytes into the data segment.
-fbaserel32 = 32-bit offsets from A4, where A4 points 2147483648 bytes into the data segment (68020+ only)

Output GCC default paths: m68k-amigaos-cpp -v

Library Info:

Libnix      = Standard C link library (similar to glibc or newlib)

libnix 2.2  = https://github.com/adtools/libnix - Jeff Shepher's + Gunther Nikl + Matthias Fleischer C-Libraries and Header files

libnix 3.0  = https://github.com/diegocr/libnix - Diego Casorran additions to libnix 2.2

clib2       = https://github.com/adtools/clib2  - Olaf Barthel's C-Libraries and Header files

ndk/lib/sfd (*.sfd files) = amiga.lib stubs, clib prototyp header-, pragma header, and .fd files are all generated by the sfd files

GCC 2.95.3 and 3.4.6 Target Structure: <m68k-amigaos>

bin                     : ar as gcc ld nm ranlib strip
    
clib2
   /lib                 : nb32crt0.o nbcrt0.o ncrt0.o nr32crt0.o nrcrt0.0
   /lib                 : libamiga.a libc.a libdebug.a libm.a libnet.a libunix.a   
   /lib/libm020         : libamiga.a libc.a libdebug.a libm.a libm881.a libnet.a libunix.a    
   /lib/libb            : libamiga.a libc.a libdebug.a libm.a libnet.a libunix.a  
   /lib/libb/libm020    : libamiga.a libc.a libdebug.a libm.a libm881.a libnet.a libunix.a    
   /lib/lib32           : libamiga.a libc.a libdebug.a libm.a libm881.a libnet.a libunix.a 
   /lib/libb32/libm020  : libamiga.a libc.a libdebug.a libm.a libm881.a libnet.a libunix.a 
   

lib/            : <libiberty missing>

libnix
   /lib
      /libnix   : detach.o  devinit.o       libinit.o   libinit.o
                : libm.a    libnix_main.a   libnix.a    libnix13.a  libnix20.a  libnixmain.a    libsocket.a libstack.a  libstubs.a
                : nbcrt0.o  ncrt0.0         nlbcrt0.0   nlcrt0.o    nrcrt0.o    swapstack.o      

 GCC 3.4.6 Library Structure: <m68k-amigaos>   

    libamiga.a    libc.a      libdebug.a      libm.a      libg.a      libpthread.a    libstubs.a  lib__m__.a       crt0.o        
    
    clib2/lib   : libamiga.a    libc.a      libdebug.a      libm.a      libnet.a    libunix.a   nb32crt0.o  nbcrt0.0    ncrt0.o     nr32crt0.o  nrcrt0.o
    
Target Library Directories for C-Libraries (CLib2/Libnix):
    lib         = default  
    lib/libm020 = DSMALL_DATA -m68020
    lib/libm020/libm881 = -DSMALL_DATA -m68020 -m68881
    
    lib/libb    = -fbaserel -DSMALL_DATA (small data model)
    lib/libb/libm020 = -fbaserel -DSMALL_DATA -m68020
    lib/libb/libm020/libm881 = -fbaserel -DSMALL_DATA -m68020 -m68881

    lib/libb32  = -fbaserel32 -m68020 (large data model)
    lib/libb32/libm020 = -fbaserel32 -DMSALL_DATA -m68020
    lib/libb32/libm020/libm881 = -fbaserel32 -DSMALL_DATA -m68020 -m68881
   
Target Library Directories: 
    lib/fd          =  
    lib/sfd         =
    lib/ldscripts   = amiga_bss.* and amiga.x* files (no idea???)

Library Collections:
libc.a        = Standard C Library, based on glibc (which does not compile for m68k)
                or newlib or specific other C-libs made for Amiga (libnix/clib2)
libiberty.a   = Software library with subroutines used by various GNU programs
libm.a        = Math library for non-FPU Amigas
libdebug.a    = Debug library
libamiga.a    = AmigaOS link library (gcc version of original amiga.lib)
crt0.o        = crt0 (or ncrt/nbcrt/etc) is a set of execution startup routines linked
                into a C program that performs any initialization work required before calling the program's main function. 