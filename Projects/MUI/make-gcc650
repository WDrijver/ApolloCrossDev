# ApolloCrossDev Makefile template for GCC-6.50 v0.9
# 20-9-2024
# Willem Drijver

# Define Shell Environment
PWD = $(shell pwd)
DIR = $(notdir $(shell pwd))

# Define ApolloCrossDev (Default = GCC 6.50, optional change to GCC 13.10 --> NO 68080 support yet!)
PREFIX 	= Compilers/GCC-6.50
# PREFIX 	= Compilers/GCC-13.10
TARGET 	= m68k-amigaos
ACP 	= ./Projects/ApolloExplorer/acp/acp
GDB	= ./Projects/bgdbserver/bgdbserver

#Define Project Name and Directory (replace <project-name> and <directory-name>)
PROJECT_DIR	= Projects/MUI

# Define GNU C-Compiler Type (C = Default, switch comment to change to C++)
C_COMPILER	= $(PREFIX)/bin/m68k-amigaos-gcc
# C_COMPILER	= $(PREFIX)/bin/m68k-amigaos-g++

# Define Standard C-Libraries and Headers (libnix = Default, switch comments to change to clib2)
C_LIB		= -noixemul
# C_LIB 	= -mcrt=clib2
C_INCL_CLB	= $(PREFIX)/$(TARGET)/libnix/include
# C_INCL_CLB  = $(PREFIX)/$(TARGET)/clib2/include

# Define Additional Libraries
# C_LIBS_SDL	= -lSDL -lSDL_ttf -lfreetype
C_LIBS_MUI	= -lmui
C_LIBS_MATH	= -lm
C_LIBS_ALL 	= $(C_LIBS_SDL) $(C_LIBS_MUI) $(C_LIBS_MATH) 

#Define Additional Headers
C_INCL_SYS	= $(PREFIX)/$(TARGET)/sys-include
C_INCL_NDK13= $(PREFIX)/$(TARGET)/ndk13-include
C_INCL_NDK39= $(PREFIX)/$(TARGET)/ndk39-include
C_INCL_NDK32= $(PREFIX)/$(TARGET)/ndk32-include/Include_H
C_INCL_GL	= $(PREFIX)/$(TARGET)/include/GL
C_INCL_SDL	= $(PREFIX)/$(TARGET)/include/SDL
C_INCL_MUI	= $(PREFIX)/$(TARGET)/include/MUI
C_INCL_ALL 	= -I. -I$(C_INCL_CLB) -I$(C_INCL) -I$(C_INCL_SYS) -I$(C_INCL_NDK32) -I$(C_INCL_MUI)

# Define C Options
C_OPTIONS 	= -O3 -m68080 -m68881 -ffast-math -DREGPARM=4 -DM68K=1 -w
# -fomit-frame-pointer
C_DEFINES 	= -DNO_INLINE_STDARG -D_TIMEVAL_DEFINED
C_DEBUG		= -g
C_FLAGS = $(C_LIB) $(C_OPTIONS) $(C_DEBUG) $(C_DEFINES) $(C_INCL_ALL) $(C_LIBS_ALL)

# Define ASM Compiler
S_COMPILER = $(PREFIX)/bin/vasmm68k_mot

# Define ASM Includes
S_INCLUDE 	= $(PREFIX)/$(TARGET)/devpac/Include
S_LIBS		= $(PREFIX)/$(TARGET)/devpac/Libs	

# Define ASM Options
S_FLAGS = -Fhunk -m68080 -m68881 -opt-speed -I$(S_INCLUDE)

# Define Object Linker
O_LINKER = $(PREFIX)/bin/m68k-amigaos-gcc

# Define Source and Object Directory
C_SOURCEDIR = $(PROJECT_DIR)
S_SOURCEDIR = $(PROJECT_DIR)
C_OBJECTDIR = $(PROJECT_DIR)
S_OBJECTDIR = $(PROJECT_DIR)

# Define Object Filelist
C_FILES = $(wildcard $(C_SOURCEDIR)/*.c)
S_FILES = $(wildcard $(S_SOURCEDIR)/*.s)
O_FILES = $(patsubst $(C_SOURCEDIR)/%.c,$(C_OBJECTDIR)/%.o,$(C_FILES)) $(patsubst $(S_SOURCEDIR)/%.s,$(S_OBJECTDIR)/%.o,$(S_FILES))

# Define Executable Name
EXE =   $(PROJECT_DIR)/Aboutbox	\
	$(PROJECT_DIR)/AppWindow   	\
	$(PROJECT_DIR)/BoopsiDoor   \
	$(PROJECT_DIR)/Balancing	\
        $(PROJECT_DIR)/Class1       \
        $(PROJECT_DIR)/Class2       \
        $(PROJECT_DIR)/Class3       \
        $(PROJECT_DIR)/Class4       \
        $(PROJECT_DIR)/Clock        \
        $(PROJECT_DIR)/DragnDrop    \
        $(PROJECT_DIR)/ElidedText   \
        $(PROJECT_DIR)/EmbeddedImages \
        $(PROJECT_DIR)/EnvBrowser   \
        $(PROJECT_DIR)/GIFAnim      \
        $(PROJECT_DIR)/Guigfx       \
        $(PROJECT_DIR)/Hyperlink    \
        $(PROJECT_DIR)/InputHandler \
        $(PROJECT_DIR)/LayGroup     \
        $(PROJECT_DIR)/Layout       \
        $(PROJECT_DIR)/List1        \
        $(PROJECT_DIR)/List2        \
        $(PROJECT_DIR)/MenuImages   \
        $(PROJECT_DIR)/Menus        \
        $(PROJECT_DIR)/MUI-Demo     \
        $(PROJECT_DIR)/MultiSel     \
        $(PROJECT_DIR)/Pages        \
        $(PROJECT_DIR)/Pointers     \
        $(PROJECT_DIR)/Popup        \
        $(PROJECT_DIR)/ShowHide     \
        $(PROJECT_DIR)/Slave        \
        $(PROJECT_DIR)/Slidorama    \
        $(PROJECT_DIR)/Subtask      \
        $(PROJECT_DIR)/Textdata     \
        $(PROJECT_DIR)/Virtual      \
        $(PROJECT_DIR)/WbMan

#        $(PROJECT_DIR)/Title        \

# Make Project (Init -> Build -> Clean -> Exit)
all: init cleanbefore build cleanafter upload exit

init:
	clear
	@echo "\e[37m------------------------------------------------------------------\e[0m"
	@echo "\e[1;31mApollo\e[1;30mCrossDev \e[37mGCC-6.50-Stable Edition v0.8\e[0m"    
	@echo "\e[36mC-Sources : \e[37m$(C_FILES)\e[0m"
	@echo "\e[36mS-Sources : \e[37m$(S_FILES)\e[0m"
	@echo "\e[36mExecutable: \e[37m$(EXE)\e[0m"
	@echo "\e[37m------------------------------------------------------------------\e[30m"

cleanbefore:
	@rm -f $(C_OBJECTDIR)/*.o $(S_OBJECTDIR)/*.o $(PROJECT_DIR)/log*.txt $(EXE)

build: $(EXE)

# Link each Object to corresponding Executable
$(PROJECT_DIR)/% : $(C_OBJECTDIR)/%.o 
	@$(O_LINKER) $< $(C_FLAGS) -o $@ >>$(PROJECT_DIR)/log-650.txt 2>>$(PROJECT_DIR)/log-err-650.txt

# Compile all C-Sources to Objects 
$(C_OBJECTDIR)/%.o : $(C_SOURCEDIR)/%.c
	@$(C_COMPILER) -c $(C_FLAGS) -o $@ $< >>$(PROJECT_DIR)/log-650.txt 2>>$(PROJECT_DIR)/log-err-650.txt

# Compile all ASM-Sources to Objects
$(S_OBJECTDIR)/%.o : $(S_SOURCEDIR)/%.s
	@$(S_COMPILER) $(S_FLAGS) -o $@ $< >>$(PROJECT_DIR)/log-650.txt 2>>$(PROJECT_DIR)/log-err-650.txt

cleanafter:
	@rm -f $(C_OBJECTDIR)/*.o $(S_OBJECTDIR)/*.o

upload:
	@echo "\e[37m------------------------------------------------------------------\e[0m"
	@echo "\e[1;31mApollo\e[1;30mExplorer\e[37m Upload\e[30m"
	@$(ACP) $(EXE) "$(APOLLO_V4_HOST)"
	@$(ACP) $(PROJECT_DIR)/*.info "$(APOLLO_V4_HOST)"

exit:
	@echo "\e[37m------------------------------------------------------------------\e[0m"
	@echo "\e[1;31mApollo\e[1;30mCrossDev \e[32mCompile Successful\e[0m"
	@echo "\e[37m------------------------------------------------------------------\e[0m"
	@echo " "
